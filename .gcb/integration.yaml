# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

options:
  dynamic_substitutions: true
  substitutionOption: 'ALLOW_LOOSE'
  logging: CLOUD_LOGGING_ONLY
  env:
    - GOOGLE_CLOUD_PROJECT=${PROJECT_ID}
    - GOOGLE_CLOUD_RUST_TEST_SERVICE_ACCOUNT=rust-sdk-test@${PROJECT_ID}.iam.gserviceaccount.com
    - GOOGLE_CLOUD_RUST_TEST_STORAGE_KMS_RING=us-central1
    - SCCACHE_GCS_BUCKET=${PROJECT_ID}-build-cache
    - SCCACHE_GCS_RW_MODE=READ_WRITE
    - SCCACHE_GCS_KEY_PREFIX=sccache/integration
    - RUSTC_WRAPPER=/workspace/.bin/sccache
    - UNSTABLE_CFGS=--cfg google_cloud_unstable_tracing
serviceAccount: 'projects/${PROJECT_ID}/serviceAccounts/integration-test-runner@${PROJECT_ID}.iam.gserviceaccount.com'
steps:
  - name: 'gcr.io/cloud-builders/curl'
    script: |
      #!/usr/bin/env bash
      set -e
      mkdir -p .bin
      curl -fsSL https://github.com/mozilla/sccache/releases/download/v0.9.1/sccache-v0.9.1-x86_64-unknown-linux-musl.tar.gz |
        tar -C /workspace/.bin -zxf - --strip-components=1
      chmod 755 /workspace/.bin/sccache
  - name: 'rust:1.90-bookworm'
    script: |
      #!/usr/bin/env bash
      set -e
      cargo build

      # Run integration tests with stable features
      echo "=== Running integration-tests (Stable) ==="
      cargo test --package integration-tests --features run-integration-tests

      # Run integration tests with UNSTABLE features
      if [[ -n "${UNSTABLE_CFGS}" ]]; then
        echo "=== Running integration-tests (Unstable: ${UNSTABLE_CFGS}) ==="
        env RUSTFLAGS="${UNSTABLE_CFGS}" cargo test --package integration-tests --features run-integration-tests
      fi

      echo "=== Running user-guide-samples (Stable) ==="
      cargo test --package user-guide-samples --features run-integration-tests
      echo "=== Running storage-samples (Stable) ==="
      cargo test --package storage-samples --features run-integration-tests
      cargo build --package storage-samples --profile=test --all-features

