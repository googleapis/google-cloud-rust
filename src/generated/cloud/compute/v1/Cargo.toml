# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Code generated by sidekick. DO NOT EDIT.

[package]
name                   = "google-cloud-compute-v1"
version                = "0.1.0"
description            = "Google Cloud Client Libraries for Rust - Google Compute Engine API"
edition.workspace      = true
authors.workspace      = true
license.workspace      = true
repository.workspace   = true
keywords.workspace     = true
categories.workspace   = true
rust-version.workspace = true

[features]
default = [
    "images",
    "instance-group-manager-resize-requests",
    "instance-group-managers",
    "instance-groups",
    "instances",
    "machine-types",
    "region-instance-group-managers",
    "region-instance-groups",
    "region-instance-templates",
    "region-instances",
    "region-operations",
    "zone-operations",
    "zones",
]
# Enables `client::Images` and all the types it depends on.
images = []
# Enables `client::InstanceGroupManagerResizeRequests` and all the types it depends on.
instance-group-manager-resize-requests = []
# Enables `client::InstanceGroupManagers` and all the types it depends on.
instance-group-managers = []
# Enables `client::InstanceGroups` and all the types it depends on.
instance-groups = []
# Enables `client::Instances` and all the types it depends on.
instances = []
# Enables `client::MachineTypes` and all the types it depends on.
machine-types = []
# Enables `client::RegionInstanceGroupManagers` and all the types it depends on.
region-instance-group-managers = []
# Enables `client::RegionInstanceGroups` and all the types it depends on.
region-instance-groups = []
# Enables `client::RegionInstanceTemplates` and all the types it depends on.
region-instance-templates = []
# Enables `client::RegionInstances` and all the types it depends on.
region-instances = []
# Enables `client::RegionOperations` and all the types it depends on.
region-operations = []
# Enables `client::ZoneOperations` and all the types it depends on.
zone-operations = []
# Enables `client::Zones` and all the types it depends on.
zones = []

[dependencies]
async-trait.workspace = true
bytes.workspace      = true
gax.workspace        = true
gaxi                 = { workspace = true, features = ["_internal-http-client"] }
lazy_static.workspace = true
reqwest.workspace    = true
serde.workspace      = true
serde_json.workspace = true
serde_with.workspace = true
tracing.workspace    = true
wkt.workspace        = true

[dev-dependencies]
tokio-test.workspace = true
