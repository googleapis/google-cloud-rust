# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Code generated by sidekick. DO NOT EDIT.

[package]
name                   = "google-cloud-dialogflow-cx-v3"
version                = "0.4.0"
description            = "Google Cloud Client Libraries for Rust - Dialogflow API"
edition.workspace      = true
authors.workspace      = true
license.workspace      = true
repository.workspace   = true
keywords.workspace     = true
categories.workspace   = true
rust-version.workspace = true

[features]
default = [
    "agents",
    "changelogs",
    "deployments",
    "entity-types",
    "environments",
    "experiments",
    "flows",
    "generators",
    "intents",
    "pages",
    "security-settings-service",
    "sessions",
    "session-entity-types",
    "test-cases",
    "transition-route-groups",
    "versions",
    "webhooks",
]
# Enables `client::Agents` and all the types it depends on.
agents = []
# Enables `client::Changelogs` and all the types it depends on.
changelogs = []
# Enables `client::Deployments` and all the types it depends on.
deployments = []
# Enables `client::EntityTypes` and all the types it depends on.
entity-types = []
# Enables `client::Environments` and all the types it depends on.
environments = []
# Enables `client::Experiments` and all the types it depends on.
experiments = []
# Enables `client::Flows` and all the types it depends on.
flows = []
# Enables `client::Generators` and all the types it depends on.
generators = []
# Enables `client::Intents` and all the types it depends on.
intents = []
# Enables `client::Pages` and all the types it depends on.
pages = []
# Enables `client::SecuritySettingsService` and all the types it depends on.
security-settings-service = []
# Enables `client::Sessions` and all the types it depends on.
sessions = []
# Enables `client::SessionEntityTypes` and all the types it depends on.
session-entity-types = []
# Enables `client::TestCases` and all the types it depends on.
test-cases = []
# Enables `client::TransitionRouteGroups` and all the types it depends on.
transition-route-groups = []
# Enables `client::Versions` and all the types it depends on.
versions = []
# Enables `client::Webhooks` and all the types it depends on.
webhooks = []

[dependencies]
async-trait.workspace = true
bytes.workspace      = true
gax.workspace        = true
gaxi                 = { workspace = true, features = ["_internal-http-client"] }
gtype.workspace      = true
lazy_static.workspace = true
location.workspace   = true
longrunning.workspace = true
lro.workspace        = true
reqwest.workspace    = true
rpc.workspace        = true
serde.workspace      = true
serde_json.workspace = true
serde_with.workspace = true
tracing.workspace    = true
wkt.workspace        = true

[dev-dependencies]
tokio-test.workspace = true
