// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by sidekick. DO NOT EDIT.

#[allow(unused_imports)]
use super::*;

impl std::fmt::Debug for super::HttpRequest {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut debug_struct = f.debug_struct("HttpRequest");
        debug_struct.field("request_method", &self.request_method);
        debug_struct.field("request_url", &self.request_url);
        debug_struct.field("request_size", &self.request_size);
        debug_struct.field("status", &self.status);
        debug_struct.field("response_size", &self.response_size);
        debug_struct.field("user_agent", &self.user_agent);
        debug_struct.field("remote_ip", &self.remote_ip);
        debug_struct.field("server_ip", &self.server_ip);
        debug_struct.field("referer", &self.referer);
        debug_struct.field("latency", &self.latency);
        debug_struct.field("cache_lookup", &self.cache_lookup);
        debug_struct.field("cache_hit", &self.cache_hit);
        debug_struct.field(
            "cache_validated_with_origin_server",
            &self.cache_validated_with_origin_server,
        );
        debug_struct.field("cache_fill_bytes", &self.cache_fill_bytes);
        debug_struct.field("protocol", &self.protocol);
        if !self._unknown_fields.is_empty() {
            debug_struct.field("_unknown_fields", &self._unknown_fields);
        }
        debug_struct.finish()
    }
}
