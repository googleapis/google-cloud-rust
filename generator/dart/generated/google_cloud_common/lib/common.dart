// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by sidekick. DO NOT EDIT.

/// The Google Cloud client for the Common Operation Metadata type.
///
/// Additional metadata for operations.
library;

import 'package:google_cloud_gax/common.dart';
import 'package:google_cloud_gax/src/encoding.dart';
import 'package:google_cloud_protobuf/protobuf.dart';

/// Represents the metadata of the long-running operation.
class OperationMetadata extends Message {
  static const String fullyQualifiedName =
      'google.cloud.common.OperationMetadata';

  /// Output only. The time the operation was created.
  final Timestamp? createTime;

  /// Output only. The time the operation finished running.
  final Timestamp? endTime;

  /// Output only. Server-defined resource path for the target of the operation.
  final String? target;

  /// Output only. Name of the verb executed by the operation.
  final String? verb;

  /// Output only. Human-readable status of the operation, if any.
  final String? statusDetail;

  /// Output only. Identifies whether the user has requested cancellation
  /// of the operation. Operations that have successfully been cancelled
  /// have `Operation.error` value with a `google.rpc.Status.code` of 1,
  /// corresponding to `Code.CANCELLED`.
  final bool? cancelRequested;

  /// Output only. API version used to start the operation.
  final String? apiVersion;

  OperationMetadata({
    this.createTime,
    this.endTime,
    this.target,
    this.verb,
    this.statusDetail,
    this.cancelRequested,
    this.apiVersion,
  }) : super(fullyQualifiedName);

  factory OperationMetadata.fromJson(Map<String, dynamic> json) {
    return OperationMetadata(
      createTime: decodeCustom(json['createTime'], Timestamp.fromJson),
      endTime: decodeCustom(json['endTime'], Timestamp.fromJson),
      target: json['target'],
      verb: json['verb'],
      statusDetail: json['statusDetail'],
      cancelRequested: json['cancelRequested'],
      apiVersion: json['apiVersion'],
    );
  }

  @override
  Object toJson() {
    return {
      if (createTime != null) 'createTime': createTime!.toJson(),
      if (endTime != null) 'endTime': endTime!.toJson(),
      if (target != null) 'target': target,
      if (verb != null) 'verb': verb,
      if (statusDetail != null) 'statusDetail': statusDetail,
      if (cancelRequested != null) 'cancelRequested': cancelRequested,
      if (apiVersion != null) 'apiVersion': apiVersion,
    };
  }

  @override
  String toString() {
    final contents = [
      if (target != null) 'target=$target',
      if (verb != null) 'verb=$verb',
      if (statusDetail != null) 'statusDetail=$statusDetail',
      if (cancelRequested != null) 'cancelRequested=$cancelRequested',
      if (apiVersion != null) 'apiVersion=$apiVersion',
    ].join(',');
    return 'OperationMetadata($contents)';
  }
}
