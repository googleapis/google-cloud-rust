// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
package test;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/timestamp.proto";

// A service to unit test the protobuf translator.
service TestService {
  option (google.api.default_host) = "test.googleapis.com";
  option (google.api.oauth_scopes) =
      "https://www.googleapis.com/auth/cloud-platform";

  // Creates a new `Foo` resource. `Foo`s are containers for `Bar`s.
  //
  // Shows how a `body: "${field}"` option works.
  rpc CreateFoo(CreateFooRequest) returns (Foo) {
    option (google.api.http) = {
      post: "/v1/{parent=projects/*}/foos"
      body: "bar"
    };
    option (google.api.method_signature) = "parent,foo_id,bar";
  }

  // Add a Bar resource.
  //
  // Shows how a `body: "*"` option works.
  rpc AddBar(AddBarRequest) returns (Bar) {
    option (google.api.http) = {
      post: "/v1/{parent=projects/*/foos/*}:addFoo"
      body: "*"
    };
    option (google.api.method_signature) = "parent,payload";
  }
}

// Request message for `CreateFoo`.
message CreateFooRequest {
  // Required. The resource name of the project to associate with the
  // [Secret][google.cloud.secretmanager.v1.Secret], in the format `projects/*`.
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "cloudresourcemanager.googleapis.com/Project"
    }
  ];

  // Required. This must be unique within the project.
  string foo_id = 2 [(google.api.field_behavior) = REQUIRED];

  // Required. A `Bar` with initial values.
  Bar bar = 3 [(google.api.field_behavior) = REQUIRED];
}

// The `Foo` resource.
message Foo {
  option (google.api.resource) = {
    type: "test.googleapis.com/Foo"
    pattern: "projects/{project}/foos/{foo}"
  };

  // Output only. The resource name of `Foo`, in the format
  // `projects/{project}/foos/{foo}`.
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Output only. The contained `Bar`s.
  repeated Bar bar = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// Request message for `AddBar`.
message AddBarRequest {
  // Required. The resource name of the `Foo` that will contain the `Bar`.
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = { type: "test.googleapis.com/Foo" }
  ];

  // Required. Some extra stuff to make the test less trivial.
  string payload = 2 [(google.api.field_behavior) = REQUIRED];
}

// The `Bar` resource.
message Bar {
  option (google.api.resource) = {
    type: "test.googleapis.com/Bar"
    pattern: "projects/{project}/foos/{foo}/bars/{bar}"
  };

  // Output only. The resource name of `Bar`, in the format
  // `projects/{project}/foos/{foo}/bars/{bar}`.
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Output only. The time at which the `Bar`.
  google.protobuf.Timestamp create_time = 2
      [(google.api.field_behavior) = OUTPUT_ONLY];
}
