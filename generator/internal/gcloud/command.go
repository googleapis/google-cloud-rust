// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package gcloud

import "github.com/googleapis/google-cloud-rust/generator/internal/config/gcloudyaml"

type Command struct {
	ReleaseTracks []gcloudyaml.ReleaseTrack `yaml:"release_tracks,omitempty"`
	Autogenerated bool                      `yaml:"auto_generated,omitempty"`
	Hidden        bool                      `yaml:"hidden,omitempty"`
	HelpText      *CommandHelpText          `yaml:"help_text,omitempty"`
	Arguments     *Arguments                `yaml:"arguments,omitempty"`
	Request       *Request                  `yaml:"request,omitempty"`
	Response      *Response                 `yaml:"response,omitempty"`
	Async         *Async                    `yaml:"async,omitempty"`
}

type Arguments struct {
	Params []*Param `yaml:"params,omitempty"`
}

type Param struct {
	ArgName              string            `yaml:"arg_name,omitempty"`
	APIField             string            `yaml:"api_field,omitempty"`
	Type                 string            `yaml:"type,omitempty"`
	Repeated             bool              `yaml:"repeated,omitempty"`
	HelpText             string            `yaml:"help_text,omitempty"`
	IsPositional         bool              `yaml:"is_positional,omitempty"`
	IsPrimaryResource    bool              `yaml:"is_primary_resource,omitempty"`
	RequestIdField       string            `yaml:"request_id_field,omitempty"`
	ResourceSpec         RefString         `yaml:"resource_spec,omitempty"`
	Required             bool              `yaml:"required,omitempty"`
	ResourceMethodParams map[string]string `yaml:"resource_method_params,omitempty"`
	Spec                 []*FieldSpec      `yaml:"spec,omitempty"`
	Choices              []*Choice         `yaml:"choices,omitempty"`
}

type FieldSpec struct {
	APIField string `yaml:"api_field,omitempty"`
}

type Choice struct {
	ArgValue  string `yaml:"arg_value,omitempty"`
	EnumValue string `yaml:"enum_value,omitempty"`
	HelpText  string `yaml:"help_text,omitempty"`
}

type Request struct {
	ALPHA      *TrackInfo `yaml:"ALPHA,omitempty"`
	BETA       *TrackInfo `yaml:"BETA,omitempty"`
	GA         *TrackInfo `yaml:"GA,omitempty"`
	APIVersion string     `yaml:"api_version,omitempty"`
	Collection []string   `yaml:"collection,omitempty"`
	Method     string     `yaml:"method,omitempty"`
}

type Async struct {
	Collection []string `yaml:"collection,omitempty"`
}

type TrackInfo struct {
	APIVersion string `yaml:"api_version,omitempty"`
}

type Response struct {
	IDField string `yaml:"id_field,omitempty"`
}

type CommandHelpText struct {
	Brief       string `yaml:"brief,omitempty"`
	Description string `yaml:"description,omitempty"`
	Examples    string `yaml:"examples,omitempty"`
}
